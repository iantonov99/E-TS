@model E_TS.ViewModels.Reservation.ReservationViewModel

@{
    ViewData["Title"] = "Добавяне на резервация";
}

<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Добавяне на резервация</h3>
                    </div>
                    <form asp-action="Add" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        @Html.HiddenFor(r => r.Id)
                        @Html.HiddenFor(r => r.UserId)
                        @Html.HiddenFor(x => x.Latitude, new { id = "lat" })
                        @Html.HiddenFor(x => x.Longitude, new { id = "lon" })
                        <div class="card-body">
                            @foreach (var option in Model.Options)
                            {
                                @Html.RadioButtonFor(model => model.SparkOrScooter, option) @option <br />
                            }
                            <span asp-validation-for="@Model.SparkOrScooter" class="text-danger"></span>
                            <div class="form-group">
                                @Html.EditorFor(r => r.DateAndTime, "DateTime")
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(r => r.Address, "String")
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(r => r.Description, "String")
                            </div>
                            <div class="form-group">
                                <label asp-for="@Model.Price" class="control-label"></label>
                                <input asp-for="@Model.Price" class="form-control" type="number" readonly>
                            </div>
                        </div>
                        <div class="card-footer">
                            <input type="submit" value="Добави към количката" class="btn btn-success" />
                            <a asp-action="Index" asp-controller="Reservation" class="btn btn-danger">Назад</a>
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-md-6">
                <span asp-validation-for="@Model.Latitude" class="text-danger"></span>
                <span id="validCoords" class="text-danger"></span>
                <div id="map">

                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        (function () {
            $('#reservationdatetime').datetimepicker({ icons: { time: 'far fa-clock' }, autoclose: true });
        })();
    </script>


    <script>
        function loadMap() {
            var map = new Microsoft.Maps.Map(document.getElementById('map'), {
                credentials: 'AoA20tNDXEBV-TUd6Z4NW0Pd0VXQ-l3uu04Qf8jfKK3U5W-iwMSBRergVVcSmgZL',
                center: new Microsoft.Maps.Location(42.697782, 23.321698),
                mapTypeId: Microsoft.Maps.MapTypeId.road,
                zoom: 12
            });


            Microsoft.Maps.Events.addHandler(map, 'click', function (e) {

                if (e.targetType == "map") {
                    var point = new Microsoft.Maps.Point(e.getX(), e.getY());
                    var loc = e.target.tryPixelToLocation(point);
                    var marker = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(loc.latitude, loc.longitude), { color: 'green' });
                    map.entities.push(marker);
                    $('#lat').val(loc.latitude);
                    $('#lon').val(loc.longitude);
                    document.getElementById("validCoords").innerHTML = "";
                    var small = ((loc.latitude - 42.697732) * (loc.latitude - 42.697732)) + ((loc.longitude - 23.321804) * (loc.longitude - 23.321804)) < (0.013 * 0.013);
                    var medium = ((loc.latitude - 42.697732) * (loc.latitude - 42.697732)) + ((loc.longitude - 23.321804) * (loc.longitude - 23.321804)) < (0.05 * 0.05);
                    var large = ((loc.latitude - 42.697732) * (loc.latitude - 42.697732)) + ((loc.longitude - 23.321804) * (loc.longitude - 23.321804)) < (0.075 * 0.075);
                    if (small) {
                        $('#Price').val(5);
                    }
                    else if (!small && medium) {
                        $('#Price').val(10);
                    }
                    else if (!small && !medium && large) {
                        $('#Price').val(15);
                    }
                    else {
                        document.getElementById("validCoords").innerHTML = "В тази зона не предлагаме услугата, моля изберете друга зона!";
                        $('#Price').val(0);
                        $('#lat').val(0);
                    }
                }


            });
            // Create the infobox for the pushpin
            //var infobox = null;

            //declare addMarker function
            //function addMarker(latitude, longitude, title, description, pid)
            //{
            //    var marker = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(latitude, longitude), { color: 'green' });

            //    infobox = new Microsoft.Maps.Infobox(marker.getLocation(), {
            //        visible : false
            //    });

            //    marker.metadata = {
            //        id: pid,
            //        title: title,
            //        description: description
            //    };

            //    Microsoft.Maps.Events.addHandler(marker, 'mouseout', hideInfobox);
            //    Microsoft.Maps.Events.addHandler(marker, 'mouseover', showInfobox);

            //    infobox.setMap(map);
            //    map.entities.push(marker);
            //    marker.setOptions({ enableHoverStyle: true });
            //};

            //function showInfobox(e) {
            //    if (e.target.metadata) {
            //        infobox.setOptions({
            //            location: e.target.getLocation(),
            //            title: e.target.metadata.title,
            //            description: e.target.metadata.description,
            //            visible: true
            //        });
            //    }
            //}

            //function hideInfobox(e) {
            //    infobox.setOptions({ visible: false });
            //}

        }

    </script>
    <script src='https://www.bing.com/api/maps/mapcontrol?callback=loadMap&key=AoA20tNDXEBV-TUd6Z4NW0Pd0VXQ-l3uu04Qf8jfKK3U5W-iwMSBRergVVcSmgZL'></script>
}
